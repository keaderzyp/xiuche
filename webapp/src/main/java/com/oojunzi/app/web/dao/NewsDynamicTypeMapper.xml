<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oojunzi.app.web.dao.NewsDynamicTypeMapper" >
  <resultMap id="BaseResultMap" type="com.oojunzi.app.web.model.NewsDynamicType" >
    <id column="TYPE_ID" property="typeId" jdbcType="VARCHAR" />
    <result column="TYPE_NAME" property="typeName" jdbcType="VARCHAR" />
    <result column="TYPE_ICON" property="typeIcon" jdbcType="VARCHAR" />
    <result column="TYPE_STATE" property="typeState" jdbcType="VARCHAR" />
    <result column="PARAM1" property="param1" jdbcType="VARCHAR" />
    <result column="PARAM2" property="param2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TYPE_ID, TYPE_NAME, TYPE_ICON, TYPE_STATE, PARAM1, PARAM2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.oojunzi.app.web.model.NewsDynamicTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from T_NEWS_DYNAMIC_TYPE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_NEWS_DYNAMIC_TYPE
    where TYPE_ID = #{typeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_NEWS_DYNAMIC_TYPE
    where TYPE_ID = #{typeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.oojunzi.app.web.model.NewsDynamicType" >
    insert into T_NEWS_DYNAMIC_TYPE (TYPE_ID, TYPE_NAME, TYPE_ICON, 
      TYPE_STATE, PARAM1, PARAM2
      )
    values (#{typeId,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, #{typeIcon,jdbcType=VARCHAR}, 
      #{typeState,jdbcType=VARCHAR}, #{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oojunzi.app.web.model.NewsDynamicType" >
    insert into T_NEWS_DYNAMIC_TYPE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        TYPE_ID,
      </if>
      <if test="typeName != null" >
        TYPE_NAME,
      </if>
      <if test="typeIcon != null" >
        TYPE_ICON,
      </if>
      <if test="typeState != null" >
        TYPE_STATE,
      </if>
      <if test="param1 != null" >
        PARAM1,
      </if>
      <if test="param2 != null" >
        PARAM2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeIcon != null" >
        #{typeIcon,jdbcType=VARCHAR},
      </if>
      <if test="typeState != null" >
        #{typeState,jdbcType=VARCHAR},
      </if>
      <if test="param1 != null" >
        #{param1,jdbcType=VARCHAR},
      </if>
      <if test="param2 != null" >
        #{param2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oojunzi.app.web.model.NewsDynamicType" >
    update T_NEWS_DYNAMIC_TYPE
    <set >
      <if test="typeName != null" >
        TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeIcon != null" >
        TYPE_ICON = #{typeIcon,jdbcType=VARCHAR},
      </if>
      <if test="typeState != null" >
        TYPE_STATE = #{typeState,jdbcType=VARCHAR},
      </if>
      <if test="param1 != null" >
        PARAM1 = #{param1,jdbcType=VARCHAR},
      </if>
      <if test="param2 != null" >
        PARAM2 = #{param2,jdbcType=VARCHAR},
      </if>
    </set>
    where TYPE_ID = #{typeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oojunzi.app.web.model.NewsDynamicType" >
    update T_NEWS_DYNAMIC_TYPE
    set TYPE_NAME = #{typeName,jdbcType=VARCHAR},
      TYPE_ICON = #{typeIcon,jdbcType=VARCHAR},
      TYPE_STATE = #{typeState,jdbcType=VARCHAR},
      PARAM1 = #{param1,jdbcType=VARCHAR},
      PARAM2 = #{param2,jdbcType=VARCHAR}
    where TYPE_ID = #{typeId,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleAndPage" parameterType="com.oojunzi.app.web.model.NewsDynamicType" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from T_NEWS_DYNAMIC_TYPE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause} 
        </if>
    </select> 
</mapper>